plugins {
	id 'java'
	//id 'org.springframework.boot' version '3.5.5'
    id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.web.pharma.auth'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

def jjwtVersion = findProperty('jjwtVersion')

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of("$javaVersion")
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

/*ext {
    set('springCloudVersion', "2025.0.0")
}*/

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // JWT
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // OpenAPI/Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

/*dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}*/

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
    archiveBaseName.set("$serviceName")   // default is project.name
    archiveVersion.set("$version")
    archiveClassifier.set("")      // ensures no 'plain' suffix
}

